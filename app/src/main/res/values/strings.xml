<resources>
    <string name="app_name">ReductionspriveeExampleKotlin</string>
    <string name="title_kotlin">Demo application in Kotlin</string>
    <string name="desc_kotlin">Kotlin is a cross-platform, statically typed, general-purpose programming language with type inference. Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin\'s standard library depends on the Java Class Library, but type inference allows its syntax to be more concise.</string>
    <string name="desc_more_kotlin">On 7 May 2019, Google announced that the Kotlin programming language is now its preferred language for Android app developers. As a result many developers have switched to Kotlin. Since the release of Android Studio 3.0 in October 2017, Kotlin has been included as an alternative to the standard Java compiler. The Android Kotlin compiler produces Java 6 bytecode by default (which runs in any later JVM), but lets the programmer choose to target Java 8 up to 15, for optimization, or allows for more features, e.g.</string>
    <string name="open_overlay">Open overlay</string>
    <string name="open_java">Open Java example</string>
    <string name="open_kotlin">Open Kotlin example</string>
    <string name="title_java">Demo application in Java</string>
    <string name="desc_java">Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.</string>
    <string name="desc_more_java"> It is a general-purpose programming language intended to let application developers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation. Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. </string>
</resources>